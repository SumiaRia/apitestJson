{
	"info": {
		"_postman_id": "d4f5186d-06d6-4f2e-9bf8-71f3c3c7a6b9",
		"name": "json placeholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23224208"
	},
	"item": [
		{
			"name": "get posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"tests header type\", ()=>{\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"//check of value of headers\r",
							"pm.test(\"test particular value of header\", ()=>{\r",
							"    pm.expect(pm.response.headers.get('Transfer-Encoding')).to.eql('chunked');\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/posts",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "get comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status is 200\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"pm.test(\"body\", ()=>{\r",
							"    pm.expect(responseJson[0].email).to.eql(\"Eliseo@gardner.biz\");\r",
							"});\r",
							"pm.test(\"Test the type of any part of the response\", ()=>{\r",
							"    //pm.expect(responseJson).to.be.an(\"object\");\r",
							"    pm.expect(responseJson[0].id).to.be.a(\"number\");\r",
							"    pm.expect(responseJson[0].name).to.be.a(\"string\");\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comments",
					"host": [
						"{{url}}"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get post comments",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"post_id\", \"2\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"pm.test(\"header parts\", ()=>{\r",
							"    pm.response.to.have.header(\"Connection\");\r",
							"    pm.expect(pm.response.headers.get('Cache-Control')).to.eql(\"max-age=43200\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/posts/{{post_id}}/comments",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts",
						"{{post_id}}",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get specific comment post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/comments?postId={{postId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "{{postId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"succesful of created\", ()=>{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": \"{{user_id}}\",\r\n    \"title\": \"hello\",\r\n    \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/posts",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "put post id",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"userId\": 1,\r\n    \"id\": {{id}},\r\n    \"title\": \"no reply\",\r\n    \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/posts/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "posts-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"title\", ()=>{\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.id).to.eql(2);\r",
							"});\r",
							"pm.test(\"check status\", ()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"check particular value of header\", ()=>{\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"pm.test(\"response time\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.have.above(60);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/posts/{{id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": " Delete",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/posts/1",
					"host": [
						"{{url}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://jsonplaceholder.typicode.com",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "1"
		},
		{
			"key": "id",
			"value": "2"
		},
		{
			"key": "postId",
			"value": "2"
		},
		{
			"key": "post_id",
			"value": ""
		}
	]
}